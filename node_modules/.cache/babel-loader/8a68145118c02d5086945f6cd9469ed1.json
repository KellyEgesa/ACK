{"ast":null,"code":"var _jsxFileName = \"/home/kellyegesa/Desktop/Projects/ack_stpeters/src/compoments/login.jsx\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport { checkUser } from \"../service/userService\";\nimport { toast } from \"react-toastify\";\n\nclass LoginForm extends Form {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: {\n        name: \"\",\n        password: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      name: Joi.string().required().label(\"Username\"),\n      password: Joi.string().required().label(\"Password\")\n    };\n\n    this.doSubmit = async () => {\n      try {\n        const {\n          data: jwt\n        } = await checkUser(this.state.data);\n        console.log(jwt); // this.props.history.push(\"/Dashboard\");\n      } catch (ex) {\n        if (ex.response && ex.response.status === 400) toast.error(ex.response.data);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Log In\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, this.renderInput(\"name\", \"Username\"), this.renderInput(\"password\", \"Password\", \"password\"), this.renderButton(\"Login\")));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/kellyegesa/Desktop/Projects/ack_stpeters/src/compoments/login.jsx"],"names":["React","Joi","Form","checkUser","toast","LoginForm","state","data","name","password","errors","schema","string","required","label","doSubmit","jwt","console","log","ex","response","status","error","render","handleSubmit","renderInput","renderButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,SAAN,SAAwBH,IAAxB,CAA6B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACNC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,QAAQ,EAAE;AAAtB,OADA;AAENC,MAAAA,MAAM,EAAE;AAFF,KADmB;AAAA,SAK3BC,MAL2B,GAKlB;AACPH,MAAAA,IAAI,EAAEP,GAAG,CAACW,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,UAA9B,CADC;AAEPL,MAAAA,QAAQ,EAAER,GAAG,CAACW,MAAJ,GAAaC,QAAb,GAAwBC,KAAxB,CAA8B,UAA9B;AAFH,KALkB;;AAAA,SAU3BC,QAV2B,GAUhB,YAAY;AACrB,UAAI;AACF,cAAM;AAAER,UAAAA,IAAI,EAAES;AAAR,YAAgB,MAAMb,SAAS,CAAC,KAAKG,KAAL,CAAWC,IAAZ,CAArC;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAFE,CAGF;AACD,OAJD,CAIE,OAAOG,EAAP,EAAW;AACX,YAAIA,EAAE,CAACC,QAAH,IAAeD,EAAE,CAACC,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EACEjB,KAAK,CAACkB,KAAN,CAAYH,EAAE,CAACC,QAAH,CAAYb,IAAxB;AACH;AACF,KAnB0B;AAAA;;AAqB3BgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,WAAL,CAAiB,MAAjB,EAAyB,UAAzB,CADH,EAEG,KAAKA,WAAL,CAAiB,UAAjB,EAA6B,UAA7B,EAAyC,UAAzC,CAFH,EAGG,KAAKC,YAAL,CAAkB,OAAlB,CAHH,CAFF,CADF;AAUD;;AAhC0B;;AAmC7B,eAAerB,SAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport { checkUser } from \"../service/userService\";\nimport { toast } from \"react-toastify\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { name: \"\", password: \"\" },\n    errors: {},\n  };\n  schema = {\n    name: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data: jwt } = await checkUser(this.state.data);\n      console.log(jwt);\n      // this.props.history.push(\"/Dashboard\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400)\n        toast.error(ex.response.data);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Log In</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"name\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}