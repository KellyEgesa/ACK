{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport logger from \"./logService\";\nconsole.log(axios.defaults.headers.common[\"x-auth-token\"] = localStorage);\naxios.interceptors.response.use(null, error => {\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast(\"An unexpected error occurred\");\n  }\n\n  return Promise.reject(error);\n});\nexport default {\n  get: axios.get,\n  post: axios.post,\n  delete: axios.delete\n};","map":{"version":3,"sources":["/home/kellyegesa/Desktop/Projects/ack_stpeters/src/service/httpService.js"],"names":["axios","toast","logger","console","log","defaults","headers","common","localStorage","interceptors","response","use","error","expectedError","status","Promise","reject","get","post","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEAC,OAAO,CAACC,GAAR,CAAaJ,KAAK,CAACK,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgDC,YAA7D;AACAR,KAAK,CAACS,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,IAAhC,EAAuCC,KAAD,IAAW;AAC/C,QAAMC,aAAa,GACjBD,KAAK,CAACF,QAAN,IACAE,KAAK,CAACF,QAAN,CAAeI,MAAf,IAAyB,GADzB,IAEAF,KAAK,CAACF,QAAN,CAAeI,MAAf,GAAwB,GAH1B;;AAKA,MAAI,CAACD,aAAL,EAAoB;AAClBX,IAAAA,MAAM,CAACE,GAAP,CAAWQ,KAAX;AACAX,IAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;;AAED,SAAOc,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAZD;AAcA,eAAe;AACbK,EAAAA,GAAG,EAAEjB,KAAK,CAACiB,GADE;AAEbC,EAAAA,IAAI,EAAElB,KAAK,CAACkB,IAFC;AAGbC,EAAAA,MAAM,EAAEnB,KAAK,CAACmB;AAHD,CAAf","sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport logger from \"./logService\";\n\nconsole.log((axios.defaults.headers.common[\"x-auth-token\"] = localStorage));\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast(\"An unexpected error occurred\");\n  }\n\n  return Promise.reject(error);\n});\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  delete: axios.delete,\n};\n"]},"metadata":{},"sourceType":"module"}